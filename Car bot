import requests

# Sample car_database structure
car_database = {
    "toyota": {"camry": {}, "corolla": {}},
    "honda": {"civic": {}, "accord": {}},
    "ford": {"mustang": {}, "f-150": {}},
    "chevy": {"silverado": {}, "malibu": {}},
    "mazda": {"mazda3": {}, "mazda6": {}},
    "audi": {"a4": {}, "q5": {}},
    "subaru": {"impreza": {}, "forester": {}},
    "cadillac": {"escalade": {}, "xt5": {}},
    "hyundai": {"sonata": {}, "tucson": {}},
    "acura": {"tlx": {}, "mdx": {}},
    "bentley": {"continental": {}, "bentayga": {}},
    "chrysler": {"pacifica": {}, "300": {}},
    "fiat": {"500": {}, "500x": {}},
    "mitsubishi": {"outlander": {}, "eclipse cross": {}},
    "jeep": {"wrangler": {}, "grand cherokee": {}},
    "tesla": {"model 3": {}, "model Y": {}},
}

def get_car_data(brand, model, year):
    base_url = "https://www.carqueryapi.com/api/0.3/"
    endpoint = "?"

    params = {
        "cmd": "getTrims",
        "make": brand,
        "model": model,
        "year": year,
    }

    try:
        response = requests.get(base_url + endpoint, params=params)
        response.raise_for_status()  # Raise an HTTPError for bad responses
        data = response.json()
        return data["Trims"] if "Trims" in data else None
    except requests.exceptions.HTTPError as errh:
        print("HTTP Error:", errh)
    except requests.exceptions.ConnectionError as errc:
        print("Error Connecting:", errc)
    except requests.exceptions.Timeout as errt:
        print("Timeout Error:", errt)
    except requests.exceptions.RequestException as err:
        print("OOps: Something went wrong", err)

    return None

def display_models(brand):
    brand = brand.lower()
    if brand in car_database:
        models = list(car_database[brand].keys())
        print("Available models for", brand.capitalize(), ":", models)
        selected_model = input("Choose a model: ").lower()

        if selected_model in car_database[brand]:
            year = input("Enter the year (e.g., 2022): ")
            car_data = get_car_data(brand, selected_model, year)

            if car_data:
                print(f"Details for {selected_model.capitalize()} ({year}):")
                for trim in car_data:
                    print("Trim:", trim["model_trim"])
                    print("Specs:", trim["model_engine_details"])
                    print("Price:", trim.get("model_msrp", "Not available"))
                    print("--------------------")
            else:
                print("No data found for the specified brand, model, and year.")
        else:
            print("Invalid model selection")
    else:
        print("Brand not found in the database")

# Main program
input_brand = input("Enter a car brand: ")
display_models(input_brand)
